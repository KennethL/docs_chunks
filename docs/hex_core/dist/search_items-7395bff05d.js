searchNodes=[{"doc":"Hex Key API","ref":"hex_api_key.html","title":"hex_api_key","type":"module"},{"doc":"Add a key.","ref":"hex_api_key.html#add/3","title":"hex_api_key.add/3","type":"function"},{"doc":"Delete a key.","ref":"hex_api_key.html#delete/2","title":"hex_api_key.delete/2","type":"function"},{"doc":"Delete all keys.","ref":"hex_api_key.html#delete_all/1","title":"hex_api_key.delete_all/1","type":"function"},{"doc":"Get a key.","ref":"hex_api_key.html#get/2","title":"hex_api_key.get/2","type":"function"},{"doc":"List keys.","ref":"hex_api_key.html#list/1","title":"hex_api_key.list/1","type":"function"},{"doc":"Hex Package API","ref":"hex_api_package.html","title":"hex_api_package","type":"module"},{"doc":"Gets package. Examples: &gt; hex_api_package:get(hex_core:default_config(), &lt;&lt;&quot;package&quot;&gt;&gt;). {ok, {200, ..., \#{ &lt;&lt;&quot;name&quot;&gt;&gt; =&gt; &lt;&lt;&quot;package1&quot;&gt;&gt;, &lt;&lt;&quot;meta&quot;&gt;&gt; =&gt; \#{ &lt;&lt;&quot;description&quot;&gt;&gt; =&gt; ..., &lt;&lt;&quot;licenses&quot;&gt;&gt; =&gt; ..., &lt;&lt;&quot;links&quot;&gt;&gt; =&gt; ..., &lt;&lt;&quot;maintainers&quot;&gt;&gt; =&gt; ... }, ..., &lt;&lt;&quot;releases&quot;&gt;&gt; =&gt; [ \#{&lt;&lt;&quot;url&quot;&gt;&gt; =&gt; ..., &lt;&lt;&quot;version&quot;&gt;&gt; =&gt; &lt;&lt;&quot;0.5.0&quot;&gt;&gt;}], \#{&lt;&lt;&quot;url&quot;&gt;&gt; =&gt; ..., &lt;&lt;&quot;version&quot;&gt;&gt; =&gt; &lt;&lt;&quot;1.0.0&quot;&gt;&gt;}], ... ]}}}","ref":"hex_api_package.html#get/2","title":"hex_api_package.get/2","type":"function"},{"doc":"Searches packages. Examples: &gt; hex_api_package:search(hex_core:default_config(), &lt;&lt;&quot;package&quot;&gt;&gt;, []). {ok, {200, ..., [ \#{&lt;&lt;&quot;name&quot;&gt;&gt; =&gt; &lt;&lt;&quot;package1&quot;&gt;&gt;, ...}, ... ]}}","ref":"hex_api_package.html#search/3","title":"hex_api_package.search/3","type":"function"},{"doc":"Hex Package Owner API","ref":"hex_api_package_owner.html","title":"hex_api_package_owner","type":"module"},{"doc":"Add package owner.","ref":"hex_api_package_owner.html#add/3","title":"hex_api_package_owner.add/3","type":"function"},{"doc":"Delete package owner.","ref":"hex_api_package_owner.html#delete/3","title":"hex_api_package_owner.delete/3","type":"function"},{"doc":"Get package owner.","ref":"hex_api_package_owner.html#get/3","title":"hex_api_package_owner.get/3","type":"function"},{"doc":"Examples: &gt; hex_api_owner:list(hex_core:default_config(), &lt;&lt;&quot;package&quot;&gt;&gt;). {ok, {200, ..., [ \#{&lt;&lt;&quot;username&quot;&gt;&gt; =&gt; &lt;&lt;&quot;alice&quot;&gt;&gt;, ...}, ... ]}}","ref":"hex_api_package_owner.html#list/2","title":"hex_api_package_owner.list/2","type":"function"},{"doc":"Hex Release API","ref":"hex_api_release.html","title":"hex_api_release","type":"module"},{"doc":"","ref":"hex_api_release.html#delete/3","title":"hex_api_release.delete/3","type":"function"},{"doc":"Gets package release. Examples: &gt; hex_api:get_release(&lt;&lt;&quot;package&quot;&gt;&gt;, &lt;&lt;&quot;1.0.0&quot;&gt;&gt;, hex_core:default_config()). {ok, {200, ..., \#{ &lt;&lt;&quot;version&quot;&gt;&gt; =&gt; &lt;&lt;&quot;1.0.0&quot;&gt;&gt;, &lt;&lt;&quot;meta&quot;&gt;&gt; =&gt; \#{ &lt;&lt;&quot;description&quot;&gt;&gt; =&gt; ..., &lt;&lt;&quot;licenses&quot;&gt;&gt; =&gt; ..., &lt;&lt;&quot;links&quot;&gt;&gt; =&gt; ..., &lt;&lt;&quot;maintainers&quot;&gt;&gt; =&gt; ... }, ...}}}","ref":"hex_api_release.html#get/3","title":"hex_api_release.get/3","type":"function"},{"doc":"","ref":"hex_api_release.html#publish/2","title":"hex_api_release.publish/2","type":"function"},{"doc":"","ref":"hex_api_release.html#retire/4","title":"hex_api_release.retire/4","type":"function"},{"doc":"","ref":"hex_api_release.html#unretire/3","title":"hex_api_release.unretire/3","type":"function"},{"doc":"Hex User API","ref":"hex_api_user.html","title":"hex_api_user","type":"module"},{"doc":"","ref":"hex_api_user.html#create/4","title":"hex_api_user.create/4","type":"function"},{"doc":"Gets user. Examples: &gt; hex_api_user:get(&lt;&lt;&quot;user&quot;&gt;&gt;, hex_core:default_config()). {ok, {200, ..., \#{ &lt;&lt;&quot;username&quot;&gt;&gt; =&gt; &lt;&lt;&quot;user&quot;&gt;&gt;, &lt;&lt;&quot;packages&quot;&gt;&gt; =&gt; [ \#{ &lt;&lt;&quot;name&quot;&gt;&gt; =&gt; ..., &lt;&lt;&quot;url&quot;&gt;&gt; =&gt; ..., ... }, ... ], ...}}}","ref":"hex_api_user.html#get/2","title":"hex_api_user.get/2","type":"function"},{"doc":"","ref":"hex_api_user.html#me/1","title":"hex_api_user.me/1","type":"function"},{"doc":"","ref":"hex_api_user.html#reset_password/2","title":"hex_api_user.reset_password/2","type":"function"},{"doc":"hex_core entrypoint module. # Config Most functions in the hex_core API takes a configuration. The configuration sets things like HTTP client to use, and API and repository URL. Some of these configuration options will likely be static for your application and some may change depending on the function you call. ## Options api_key - Authentication key used when accessing the HTTP API. api_organization - Name of the organization endpoint in the API, this should for example be set when accessing key for a specific organization. api_repository - Name of the repository endpoint in the API, this should for example be set when accessing packages from a specific repository. api_url - URL to the HTTP API (default: https://hex.pm/api). http_adapter - Callback module used for HTTP requests, see hex_http (default: hex_http_httpc). http_etag - Sets the if-none-match HTTP header with the given value to do a conditional HTTP request. http_adapter_config - Configuration to pass to the HTTP adapter. http_user_agent_fragment - Will be appended to the user-agent HTTP header (default: (httpc)). repo_key - Authentication key used when accessing the repository. repo_name - Name of the repository, used for verifying the repository signature authenticity (default: hexpm). repo_public_key - Public key used to verify the repository signature (defaults to hexpm public key https://hex.pm/docs/public_keys). repo_url - URL to the repository (default: https://repo.hex.pm). repo_organization - Name of the organization repository, appends /repos/:name to the repository URL and overrides the repo_name option. repo_verify - If true will verify the repository signature (default: true). repo_verify_origin - If true will verify the repository signature origin, requires protobuf messages as of hex_core v0.4.0 (default: true).","ref":"hex_core.html","title":"hex_core","type":"module"},{"doc":"Return default configuration.","ref":"hex_core.html#default_config/0","title":"hex_core.default_config/0","type":"function"},{"doc":"","ref":"hex_core.html#t:config/0","title":"hex_core.config/0","type":"type"},{"doc":"Behaviour for Hex HTTP adapters.","ref":"hex_http.html","title":"hex_http","type":"behaviour"},{"doc":"","ref":"hex_http.html#request/5","title":"hex_http.request/5","type":"function"},{"doc":"","ref":"hex_http.html#t:body/0","title":"hex_http.body/0","type":"type"},{"doc":"","ref":"hex_http.html#t:headers/0","title":"hex_http.headers/0","type":"type"},{"doc":"","ref":"hex_http.html#t:method/0","title":"hex_http.method/0","type":"type"},{"doc":"","ref":"hex_http.html#t:status/0","title":"hex_http.status/0","type":"type"},{"doc":"Hex Registry API","ref":"hex_registry.html","title":"hex_registry","type":"module"},{"doc":"Decode message created with sign_protobuf/2 and verify it against public key.","ref":"hex_registry.html#decode_and_verify_signed/2","title":"hex_registry.decode_and_verify_signed/2","type":"function"},{"doc":"Decode message created with encode_names/1.","ref":"hex_registry.html#decode_names/2","title":"hex_registry.decode_names/2","type":"function"},{"doc":"Decode message created with encode_package/1.","ref":"hex_registry.html#decode_package/3","title":"hex_registry.decode_package/3","type":"function"},{"doc":"Decode message created with sign_protobuf/2 without verification.","ref":"hex_registry.html#decode_signed/1","title":"hex_registry.decode_signed/1","type":"function"},{"doc":"Decode message created with encode_versions/1.","ref":"hex_registry.html#decode_versions/2","title":"hex_registry.decode_versions/2","type":"function"},{"doc":"Encode Names message.","ref":"hex_registry.html#encode_names/1","title":"hex_registry.encode_names/1","type":"function"},{"doc":"Encode Package message.","ref":"hex_registry.html#encode_package/1","title":"hex_registry.encode_package/1","type":"function"},{"doc":"Encode Versions message.","ref":"hex_registry.html#encode_versions/1","title":"hex_registry.encode_versions/1","type":"function"},{"doc":"Signs binary with given private key.","ref":"hex_registry.html#sign/2","title":"hex_registry.sign/2","type":"function"},{"doc":"Encode Signed message.","ref":"hex_registry.html#sign_protobuf/2","title":"hex_registry.sign_protobuf/2","type":"function"},{"doc":"Verifies binary against signature and a public key.","ref":"hex_registry.html#verify/3","title":"hex_registry.verify/3","type":"function"},{"doc":"","ref":"hex_registry.html#t:private_key/0","title":"hex_registry.private_key/0","type":"type"},{"doc":"","ref":"hex_registry.html#t:public_key/0","title":"hex_registry.public_key/0","type":"type"},{"doc":"Hex Repo API","ref":"hex_repo.html","title":"hex_repo","type":"module"},{"doc":"Gets names resource from the repository. Examples: &gt; hex_repo:get_names(hex_core:default_config()). {ok, {200, ..., [ \#{name =&gt; &lt;&lt;&quot;package1&quot;&gt;&gt;}, \#{name =&gt; &lt;&lt;&quot;package2&quot;&gt;&gt;}, ]}}","ref":"hex_repo.html#get_names/1","title":"hex_repo.get_names/1","type":"function"},{"doc":"Gets package resource from the repository. Examples: &gt; hex_repo:get_package(hex_core:default_config(), &lt;&lt;&quot;package1&quot;&gt;&gt;). {ok, {200, ..., { \#{checksum =&gt; ..., version =&gt; &lt;&lt;&quot;0.5.0&quot;&gt;&gt;, dependencies =&gt; []}, \#{checksum =&gt; ..., version =&gt; &lt;&lt;&quot;1.0.0&quot;&gt;&gt;, dependencies =&gt; [ \#{package =&gt; &lt;&lt;&quot;package2&quot;&gt;&gt;, optional =&gt; true, requirement =&gt; &lt;&lt;&quot;~&gt; 0.1&quot;&gt;&gt;} ]}, ]}}","ref":"hex_repo.html#get_package/2","title":"hex_repo.get_package/2","type":"function"},{"doc":"Gets tarball from the repository. Examples: &gt; {ok, {200, _, Tarball}} = hex_repo:get_tarball(&lt;&lt;&quot;package1&quot;&gt;&gt;, &lt;&lt;&quot;1.0.0&quot;&gt;&gt;, hex_core:default_config()), &gt; {ok, \#{metadata := Metadata}} = hex_tarball:unpack(Tarball, memory).","ref":"hex_repo.html#get_tarball/3","title":"hex_repo.get_tarball/3","type":"function"},{"doc":"Gets versions resource from the repository. Examples: &gt; hex_repo:get_versions(Config). {ok, {200, ..., [ \#{name =&gt; &lt;&lt;&quot;package1&quot;&gt;&gt;, retired =&gt; [], versions =&gt; [&lt;&lt;&quot;1.0.0&quot;&gt;&gt;]}, \#{name =&gt; &lt;&lt;&quot;package2&quot;&gt;&gt;, retired =&gt; [&lt;&lt;&quot;0.5.0&gt;&gt;&quot;], versions =&gt; [&lt;&lt;&quot;0.5.0&quot;&gt;&gt;, &lt;&lt;&quot;1.0.0&quot;&gt;&gt;]}, ]}}","ref":"hex_repo.html#get_versions/1","title":"hex_repo.get_versions/1","type":"function"},{"doc":"Functions for working with Hex tarballs.","ref":"hex_tarball.html","title":"hex_tarball","type":"module"},{"doc":"Creates a package tarball. Returns the binary of the tarball the &quot;inner checksum&quot; and &quot;outer checksum&quot;. The inner checksum is deprecated in favor of the inner checksum. Examples: &gt; Metadata = \#{&lt;&lt;&quot;name&quot;&gt;&gt; =&gt; &lt;&lt;&quot;foo&quot;&gt;&gt;, &lt;&lt;&quot;version&quot;&gt;&gt; =&gt; &lt;&lt;&quot;1.0.0&quot;&gt;&gt;}, &gt; Files = [{&quot;src/foo.erl&quot;, &lt;&lt;&quot;-module(foo).&quot;&gt;&gt;}], &gt; hex_tarball:create(Metadata, Files). {ok, \#{tarball =&gt; &lt;&lt;86,69,...&gt;&gt;, outer_checksum =&gt; &lt;&lt;40,32,...&gt;&gt;, inner_checksum =&gt; &lt;&lt;178,12,...&gt;&gt;}}","ref":"hex_tarball.html#create/2","title":"hex_tarball.create/2","type":"function"},{"doc":"Creates a docs tarball. Examples: &gt; Files = [{&quot;doc/index.html&quot;, &lt;&lt;&quot;Docs&quot;&gt;&gt;}], &gt; hex_tarball:create_docs(Files). {ok, \#{tarball =&gt; &lt;&lt;86,69,...&gt;&gt;, checksum =&gt; &lt;&lt;40,32,...&gt;&gt;}","ref":"hex_tarball.html#create_docs/1","title":"hex_tarball.create_docs/1","type":"function"},{"doc":"Returns base16-encoded representation of checksum.","ref":"hex_tarball.html#format_checksum/1","title":"hex_tarball.format_checksum/1","type":"function"},{"doc":"Converts an error reason term to a human-readable error message string.","ref":"hex_tarball.html#format_error/1","title":"hex_tarball.format_error/1","type":"function"},{"doc":"Unpacks a package tarball. Remember to verify the outer tarball checksum against the registry checksum returned from hex_repo:get_package(Config, Package). Examples: &gt; hex_tarball:unpack(Tarball, memory). {ok,\#{outer_checksum =&gt; &lt;&lt;...&gt;&gt;, contents =&gt; [{&quot;src/foo.erl&quot;,&lt;&lt;&quot;-module(foo).&quot;&gt;&gt;}], metadata =&gt; \#{&lt;&lt;&quot;name&quot;&gt;&gt; =&gt; &lt;&lt;&quot;foo&quot;&gt;&gt;, ...}}} &gt; hex_tarball:unpack(Tarball, &quot;path/to/unpack&quot;). {ok,\#{outer_checksum =&gt; &lt;&lt;...&gt;&gt;, metadata =&gt; \#{&lt;&lt;&quot;name&quot;&gt;&gt; =&gt; &lt;&lt;&quot;foo&quot;&gt;&gt;, ...}}}`&#39;&#39;","ref":"hex_tarball.html#unpack/2","title":"hex_tarball.unpack/2","type":"function"},{"doc":"","ref":"hex_tarball.html#t:checksum/0","title":"hex_tarball.checksum/0","type":"type"},{"doc":"","ref":"hex_tarball.html#t:contents/0","title":"hex_tarball.contents/0","type":"type"},{"doc":"","ref":"hex_tarball.html#t:filename/0","title":"hex_tarball.filename/0","type":"type"},{"doc":"","ref":"hex_tarball.html#t:files/0","title":"hex_tarball.files/0","type":"type"},{"doc":"","ref":"hex_tarball.html#t:metadata/0","title":"hex_tarball.metadata/0","type":"type"},{"doc":"","ref":"hex_tarball.html#t:tarball/0","title":"hex_tarball.tarball/0","type":"type"}]