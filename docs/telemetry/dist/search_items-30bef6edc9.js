searchNodes=[{"doc":"telemetry allows you to invoke certain functions whenever a particular event is emitted. For more information see the documentation for attach/4, attach_many/4 and execute/2.","ref":"telemetry.html","title":"telemetry","type":"module"},{"doc":"Attaches the handler to the event. handler_id must be unique, if another handler with the same ID already exists the {error, already_exists} tuple is returned. See execute/3 to learn how the handlers are invoked. Note: due to how anonymous functions are implemented in the Erlang VM, it is best to use function captures (i.e. fun mod:fun/4 in Erlang or &amp;Mod.fun/4 in Elixir) as event handlers to achieve maximum performance. In other words, avoid using literal anonymous functions (fun(...) -&gt; ... end or fn ... -&gt; ... end) or local function captures (fun handle_event/4 or &amp;handle_event/4 ) as event handlers. All the handlers are executed by the process dispatching event. If the function fails (raises, exits or throws) then the handler is removed. Note that you should not rely on the order in which handlers are invoked.","ref":"telemetry.html#attach/4","title":"telemetry.attach/4","type":"function"},{"doc":"Attaches the handler to many events. The handler will be invoked whenever any of the events in the event_names list is emitted. Note that failure of the handler on any of these invokations will detach it from all the events in event_name (the same applies to manual detaching using detach/1). Note: due to how anonymous functions are implemented in the Erlang VM, it is best to use function captures (i.e. fun mod:fun/4 in Erlang or &amp;Mod.fun/4 in Elixir) as event handlers to achieve maximum performance. In other words, avoid using literal anonymous functions (fun(...) -&gt; ... end or fn ... -&gt; ... end) or local function captures (fun handle_event/4 or &amp;handle_event/4 ) as event handlers. All the handlers are executed by the process dispatching event. If the function fails (raises, exits or throws) then the handler is removed. Note that you should not rely on the order in which handlers are invoked.","ref":"telemetry.html#attach_many/4","title":"telemetry.attach_many/4","type":"function"},{"doc":"Removes the existing handler. If the handler with given ID doesn&#39;t exist, {error, not_found} is returned.","ref":"telemetry.html#detach/1","title":"telemetry.detach/1","type":"function"},{"doc":"Equivalent to telemetry:execute(EventName, Measurements, \#{}).","ref":"telemetry.html#execute/2","title":"telemetry.execute/2","type":"function"},{"doc":"Emits the event, invoking handlers attached to it. When the event is emitted, the handler function provided to attach/4 is called with four arguments: the event name the map of measurements the map of event metadata the handler configuration given to attach/4","ref":"telemetry.html#execute/3","title":"telemetry.execute/3","type":"function"},{"doc":"Returns all handlers attached to events with given prefix. Handlers attached to many events at once using attach_many/4 will be listed once for each event they&#39;re attached to. Note that you can list all handlers by feeding this function an empty list.","ref":"telemetry.html#list_handlers/1","title":"telemetry.list_handlers/1","type":"function"},{"doc":"","ref":"telemetry.html#t:event_measurements/0","title":"telemetry.event_measurements/0","type":"type"},{"doc":"","ref":"telemetry.html#t:event_metadata/0","title":"telemetry.event_metadata/0","type":"type"},{"doc":"","ref":"telemetry.html#t:event_name/0","title":"telemetry.event_name/0","type":"type"},{"doc":"","ref":"telemetry.html#t:event_prefix/0","title":"telemetry.event_prefix/0","type":"type"},{"doc":"","ref":"telemetry.html#t:event_value/0","title":"telemetry.event_value/0","type":"type"},{"doc":"","ref":"telemetry.html#t:handler/0","title":"telemetry.handler/0","type":"type"},{"doc":"","ref":"telemetry.html#t:handler_config/0","title":"telemetry.handler_config/0","type":"type"},{"doc":"","ref":"telemetry.html#t:handler_function/0","title":"telemetry.handler_function/0","type":"type"},{"doc":"","ref":"telemetry.html#t:handler_id/0","title":"telemetry.handler_id/0","type":"type"}]